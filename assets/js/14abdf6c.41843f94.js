"use strict";(self.webpackChunkdubuqingfeng=self.webpackChunkdubuqingfeng||[]).push([[646],{23140:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"Wiki/programming/cpp/concurrency/mutex","title":"mutex","description":"\u4e92\u65a5\u9501 std::mutex","source":"@site/docs/Wiki/programming/cpp/concurrency/mutex.md","sourceDirName":"Wiki/programming/cpp/concurrency","slug":"/Wiki/programming/cpp/concurrency/mutex","permalink":"/docs/Wiki/programming/cpp/concurrency/mutex","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"lock-free","permalink":"/docs/Wiki/programming/cpp/concurrency/lock-free"},"next":{"title":"shared-mutex","permalink":"/docs/Wiki/programming/cpp/concurrency/shared-mutex"}}');var c=t(74848),i=t(28453);const o={},s=void 0,d={},u=[{value:"\u4e92\u65a5\u9501 std::mutex",id:"\u4e92\u65a5\u9501-stdmutex",level:3}];function a(e){const n={code:"code",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h3,{id:"\u4e92\u65a5\u9501-stdmutex",children:"\u4e92\u65a5\u9501 std::mutex"}),"\n",(0,c.jsxs)(n.p,{children:["\u6700\u57fa\u672c\u7684\u4e92\u65a5\u539f\u8bed\uff0c\u914d\u5408 ",(0,c.jsx)(n.code,{children:"std::lock_guard"})," \u6216 ",(0,c.jsx)(n.code,{children:"std::unique_lock"})," \u4f7f\u7528\u4ee5\u786e\u4fdd\u5f02\u5e38\u5b89\u5168\u3002"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-cpp",children:"#include <mutex>\n#include <thread>\n#include <vector>\n\nint counter = 0;\nstd::mutex mtx;\n\nvoid inc() {\n  std::lock_guard<std::mutex> lk(mtx); // RAII \u81ea\u52a8\u89e3\u9501\n  ++counter;\n}\n\nint main() {\n  std::vector<std::thread> v;\n  for (int i = 0; i < 8; ++i) v.emplace_back(inc);\n  for (auto &t : v) t.join();\n}\n"})}),"\n",(0,c.jsxs)(n.p,{children:["\u6269\u5c55\uff1a\u8bfb\u5199\u6027\u80fd\u53ef\u8003\u8651 ",(0,c.jsx)(n.code,{children:"std::shared_mutex"}),"\uff08C++17\uff09\uff0c\u6761\u4ef6\u540c\u6b65\u7528 ",(0,c.jsx)(n.code,{children:"std::condition_variable"}),"\u3002"]})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(a,{...e})}):a(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var r=t(96540);const c={},i=r.createContext(c);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);