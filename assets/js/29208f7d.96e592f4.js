"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5508],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>b});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),f=u(n),b=i,d=f["".concat(l,".").concat(b)]||f[b]||p[b]||o;return n?r.createElement(d,a(a({ref:t},s),{},{components:n})):r.createElement(d,a({ref:t},s))}));function b(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},88976:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var r=n(87462),i=(n(67294),n(3905));const o={},a="\u8ba1\u7b97\u4ea4\u6613\u624b\u7eed\u8d39\u811a\u672c",c={unversionedId:"Wiki/blockchain/bitcoin/transaction/fee",id:"Wiki/blockchain/bitcoin/transaction/fee",title:"\u8ba1\u7b97\u4ea4\u6613\u624b\u7eed\u8d39\u811a\u672c",description:"",source:"@site/docs/Wiki/blockchain/bitcoin/transaction/fee.md",sourceDirName:"Wiki/blockchain/bitcoin/transaction",slug:"/Wiki/blockchain/bitcoin/transaction/fee",permalink:"/docs/Wiki/blockchain/bitcoin/transaction/fee",draft:!1,editUrl:"https://github.com/dubuqingfeng/dubuqingfeng/tree/master/wiki/docs/Wiki/blockchain/bitcoin/transaction/fee.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"compact",permalink:"/docs/Wiki/blockchain/bitcoin/block/compact"},next:{title:"bsc",permalink:"/docs/Wiki/blockchain/coin/bsc/"}},l={},u=[],s={toc:u};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\u8ba1\u7b97\u4ea4\u6613\u624b\u7eed\u8d39\u811a\u672c"},"\u8ba1\u7b97\u4ea4\u6613\u624b\u7eed\u8d39\u811a\u672c"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"# \u89e3\u6790 json \u6587\u4ef6\n\nimport json\n\n# \u8bfb\u53d6 json \u6587\u4ef6\nwith open('tx.json', 'r') as f:\n    data = json.load(f)\n\nprint(data)\n\n# \u62ff\u5230 input \u7684 txid \u548c vout\ninputs = data['vin']\n\nvalue = 0\nfor i in inputs:\n    txid = i['txid']\n    vout = i['vout']\n    print(txid, vout)\n    # \u8bf7\u6c42 api \u62ff\u5230 value\n    # GET /api/v5/explorer/transaction/transaction-fills?chainShortName=eth&txid=0x3ae59abf714df29a15bb8ecadfbe3068aff20693bb91c7e7c9d34ce245d56def\n    import requests\n    url = 'https://blockchain.info/rawtx/' + txid\n    r = requests.get(url)\n    res = r.json()\n    # print(res)\n    # \u62ff\u5230 value\n    vout_value = res['out'][vout]['value']\n    value = value + vout_value\n\nprint(value)\n")))}p.isMDXComponent=!0}}]);