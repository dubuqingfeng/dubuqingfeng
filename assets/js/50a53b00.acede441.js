"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9590],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var c=r.createContext({}),a=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=a(e.components);return r.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},_=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,i=e.originalType,c=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),_=a(n),d=s,l=_["".concat(c,".").concat(d)]||_[d]||m[d]||i;return n?r.createElement(l,o(o({ref:t},u),{},{components:n})):r.createElement(l,o({ref:t},u))}));function d(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var i=n.length,o=new Array(i);o[0]=_;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:s,o[1]=p;for(var a=2;a<i;a++)o[a]=n[a];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}_.displayName="MDXCreateElement"},9589:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>p,toc:()=>a});var r=n(7462),s=(n(7294),n(3905));const i={},o=void 0,p={unversionedId:"code/rpc",id:"code/rpc",title:"rpc",description:"",source:"@site/docs/code/rpc.md",sourceDirName:"code",slug:"/code/rpc",permalink:"/docs/code/rpc",draft:!1,editUrl:"https://github.com/dubuqingfeng/dubuqingfeng/tree/master/wiki/docs/code/rpc.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"healthcheck",permalink:"/docs/code/healthcheck"},next:{title:"cdr",permalink:"/docs/devices/nas/docker/cdr/"}},c={},a=[],u={toc:a};function m(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},'\n#!/usr/bin/env python\n# coding=utf-8\nimport requests\nimport json\nimport time\nimport csv\nimport sys\n\nURL = "" # default url\nif len(sys.argv) > 1:\n    URL = sys.argv[1]\n\nrequest_id = 0\nheight = 0\nend_height = 24292064\nstart_height = 24291030\n# sleep_time = 0.2 # \u6682\u505c\u4e00\u6bb5\u65f6\u95f4\nreport = []\nsession = requests.Session()\n\ndef create_request_object(_method, _params, _requestId):\n    return {"jsonrpc":"2.0", "method":_method, "params":_params, "id":_requestId}, _requestId+1\n\ndef post_request_object(_HTTPEnpoint, _jsonRPCRequestObject):\n    response = session.post(_HTTPEnpoint,\n                            json=_jsonRPCRequestObject,\n                            headers={\'Content-type\': \'application/json\'})\n    return response.json()\n\nheight = start_height\n\nwhile True:\n    if height <= end_height:\n        start_time1 = time.time()\n        request_object, requestId = create_request_object(\'eth_getBlockByNumber\', [hex(height), False], request_id)\n        response_object = post_request_object(URL, request_object)\n        result = response_object[\'result\']\n        end_time1 = time.time()\n        spent_time1 = (end_time1 - start_time1)*1000\n        print(\'\u8fd0\u884c\u65f6\u95f4:%.2f\u6beb\u79d2, \u9ad8\u5ea6:%d, \u5f53\u524d\u8fd0\u884c\u65f6\u95f4:%s\' % (spent_time1, height, end_time1))\n        if result==None:\n            report.append([height, end_time1, spent_time1])\n        height = height + 1\n        # time.sleep(sleep_time)\n    else:\n        break\nprint("\u5b8c\u6210, \u5f00\u59cb\u5199\u5165 csv \u6587\u4ef6")\nwith open("output.csv","w") as csvfile:\n    writer = csv.writer(csvfile)\n    writer.writerow(["height","current_time","spent_time"])\n    writer.writerows(report)\n\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'#!/usr/bin/env python\n# coding=utf-8\nimport requests\nimport json\nimport time\nimport csv\nimport sys\n\nURL = "" # default url\nif len(sys.argv) > 1:\n    URL = sys.argv[1]\n\nrequest_id = 0\nheight = 0\nsleep_time = 0.2 # \u6682\u505c\u4e00\u6bb5\u65f6\u95f4\ntotal_time = 300 # \u603b\u5171 5 \u5206\u949f\nis_increasing_print = True # \u53ea\u8bb0\u5f55\u589e\u957f\u533a\u5757\nreport = []\nsession = requests.Session()\n\ndef create_request_object(_method, _params, _requestId):\n    return {"jsonrpc":"2.0", "method":_method, "params":_params, "id":_requestId}, _requestId+1\n\ndef post_request_object(_HTTPEnpoint, _jsonRPCRequestObject):\n    response = session.post(_HTTPEnpoint,\n                            json=_jsonRPCRequestObject,\n                            headers={\'Content-type\': \'application/json\'})\n    return response.json()\n\nstart_time = time.time()\nrequest_object, requestId = create_request_object(\'eth_blockNumber\', [], request_id)\nresponse_object = post_request_object(URL, request_object)\nheight = int(response_object[\'result\'], 16)\nt = time.time()\nspent_time = (t - start_time)*1000\nprint(\'\u8fd0\u884c\u65f6\u95f4:%s\u6beb\u79d2, \u9ad8\u5ea6:%d, \u5f53\u524d\u8fd0\u884c\u65f6\u95f4:%s\' % (spent_time, height, t))\nreport.append([height, t, spent_time])\n\nwhile True:\n    if time.time() - t < total_time:\n        last_height = height\n        start_time1 = time.time()\n        request_object, requestId = create_request_object(\'eth_blockNumber\', [], request_id)\n        response_object = post_request_object(URL, request_object)\n        height = int(response_object[\'result\'], 16)\n        end_time1 = time.time()\n        spent_time1 = (end_time1 - start_time1)*1000\n        if is_increasing_print:\n            if height > last_height:\n                print(\'\u8fd0\u884c\u65f6\u95f4:%.2f\u6beb\u79d2, \u9ad8\u5ea6:%d, \u5f53\u524d\u8fd0\u884c\u65f6\u95f4:%s\' % (spent_time1, height, end_time1))\n                report.append([height, end_time1, spent_time1])\n        else:\n            print(\'\u8fd0\u884c\u65f6\u95f4:%.2f\u6beb\u79d2, \u9ad8\u5ea6:%d, \u5f53\u524d\u8fd0\u884c\u65f6\u95f4:%s\' % (spent_time1, height, end_time1))\n            report.append([height, end_time1, spent_time1])\n        time.sleep(sleep_time)\n    else:\n        print("break")\n        break\nprint("\u5b8c\u6210, \u5f00\u59cb\u5199\u5165 csv \u6587\u4ef6")\nwith open("output.csv","w") as csvfile:\n    writer = csv.writer(csvfile)\n    writer.writerow(["height","current_time","spent_time"])\n    writer.writerows(report)\n')))}m.isMDXComponent=!0}}]);